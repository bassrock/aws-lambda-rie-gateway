name: Docker

on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  IMAGE_REPO: public.ecr.aws/eagletmt/aws-lambda-rie-gateway

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'create'
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::274147449864:role/GHAAwsLambdaRieGateway
          role-skip-session-tagging: 'true'

      - name: Log into registry
        run: aws ecr-public get-login-password --region us-east-1 | docker login -u AWS --password-stdin public.ecr.aws

      - name: Pull images for caching
        run: |
          docker pull $IMAGE_REPO:stage-builder || true
          docker pull $IMAGE_REPO:latest || true

      - name: Build image
        run: |
          docker build . --tag $IMAGE_REPO:stage-builder --target builder --cache-from $IMAGE_REPO:stage-builder
          docker build . --tag $IMAGE_REPO:latest --cache-from $IMAGE_REPO:stage-builder --cache-from $IMAGE_REPO:latest

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo VERSION=$VERSION

          docker push $IMAGE_REPO:stage-builder
          docker tag $IMAGE_REPO:latest $IMAGE_REPO:$VERSION
          docker push $IMAGE_REPO:$VERSION
